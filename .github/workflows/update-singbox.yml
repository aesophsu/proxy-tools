name: Update sing-box
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-adguardhome.yml"
      - ".github/workflows/update-dashboard.yml"
      - ".github/workflows/update-mihomo.yml"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | jq -r 'map(.version) | sort_by(split(".") | map(tonumber)) | last') >> $GITHUB_OUTPUT

  puernya:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      puernya_version: ${{ steps.puernya.outputs.puernya_version }}
      puernya_tags: ${{ steps.puernya.outputs.puernya_tags }}
      puernya_time: ${{ steps.puernya.outputs.puernya_time }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Get `sing-box PuerNya` version
        id: puernya
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          puernya_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo "puernya_version=$puernya_version" >> $GITHUB_OUTPUT
          echo puernya_tags=with_quic,with_dhcp,with_wireguard,with_shadowsocksr,with_ech,with_utls,with_clash_api,with_gvisor >> $GITHUB_OUTPUT
          puernya_time=$(git log -1 --format=%cd --date=format:'%Y-%m-%d' $(echo "$puernya_version" | awk -F'-' '{print $3}'))
          echo "puernya_time=$puernya_time" >> $GITHUB_OUTPUT

  puernya_cross:
    strategy:
      matrix:
        include:
          # macOS
          - { name: darwin-amd64, goos: darwin, goarch: amd64 }
          - { name: darwin-arm64, goos: darwin, goarch: arm64 }

    fail-fast: false
    runs-on: macos-latest
    needs:
      - go
      - puernya
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
      puernya_TAGS: ${{ needs.puernya.outputs.puernya_tags }}
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
    steps:
      - name: Checkout `building`
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building

      - name: Fix sniff
        run: sed -i 's/sniffHosts/sniffHost/' ./experimental/clashapi/trafficontrol/tracker.go

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Build `sing-box PuerNya` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${puernya_VERSION}' -s -w -buildid=" -tags "${puernya_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-puernya-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  release:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release.outputs.release_version }}
      release_tags: ${{ steps.release.outputs.release_tags }}
      release_time: ${{ steps.release.outputs.release_time }}
    steps:
      - name: Get `sing-box Release` version and time
        id: release
        run: |
          release_version=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r '.tag_name')
          echo "release_version=$release_version" >> $GITHUB_OUTPUT
          echo release_tags=with_gvisor,with_dhcp,with_wireguard,with_clash_api,with_quic,with_utls,with_ech >> $GITHUB_OUTPUT
          release_time=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases/latest | jq -r '.created_at' | xargs -I {} date -d '{} +8 hours' '+%Y-%m-%d')
          echo "release_time=$release_time" >> $GITHUB_OUTPUT

  release_cross:
    strategy:
      matrix:
        include:
          # macOS
          - { name: darwin-amd64, goos: darwin, goarch: amd64 }
          - { name: darwin-arm64, goos: darwin, goarch: arm64 }

    fail-fast: false
    runs-on: ubuntu-latest # Release 版本的构建逻辑保持不变
    needs:
      - go
      - release
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
      release_TAGS: ${{ needs.release.outputs.release_tags }}
      release_VERSION: ${{ needs.release.outputs.release_version }}
    steps:
      - name: Checkout `main`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: main

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Build `sing-box Release` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${release_VERSION}' -s -w -buildid=" -tags "${release_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-release-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  dev:
    runs-on: ubuntu-latest
    outputs:
      dev_version: ${{ steps.dev.outputs.dev_version }}
      dev_tags: ${{ steps.dev.outputs.dev_tags }}
      dev_time: ${{ steps.dev.outputs.dev_time }}
    steps:
      - name: Get `sing-box Dev` version and time
        id: dev
        run: |
          dev_version=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.tag_name | test("alpha|beta|rc"))][0].tag_name')
          echo "dev_version=$dev_version" >> $GITHUB_OUTPUT
          echo dev_tags=with_gvisor,with_dhcp,with_wireguard,with_clash_api,with_quic,with_utls,with_tailscale >> $GITHUB_OUTPUT
          dev_time=$(curl -sSL https://api.github.com/repos/SagerNet/sing-box/releases | jq -r '[.[] | select(.tag_name | test("alpha|beta|rc"))][0].created_at' | xargs -I {} date -d '{} +8 hours' '+%Y-%m-%d')
          echo "dev_time=$dev_time" >> $GITHUB_OUTPUT

  dev_cross:
    strategy:
      matrix:
        include:
          # macOS
          - { name: darwin-amd64, goos: darwin, goarch: amd64 }
          - { name: darwin-arm64, goos: darwin, goarch: arm64 }

    fail-fast: false
    runs-on: ubuntu-latest # Dev 版本的构建逻辑保持不变
    needs:
      - go
      - dev
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
      dev_TAGS: ${{ needs.dev.outputs.dev_tags }}
      dev_VERSION: ${{ needs.dev.outputs.dev_version }}
    steps:
      - name: Checkout `dev`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: dev

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Build `sing-box Dev` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${dev_VERSION}' -s -w -buildid=" -tags "${dev_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-dev-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  push_sing-box:
    needs:
      - puernya_cross
      - puernya
      - release_cross
      - release
      - dev_cross
      - dev
    runs-on: ubuntu-latest
    env:
      puernya_VERSION: ${{ needs.puernya.outputs.puernya_version }}
      puernya_TIME: ${{ needs.puernya.outputs.puernya_time }}
      release_VERSION: ${{ needs.release.outputs.release_version }}
      release_TIME: ${{ needs.release.outputs.release_time }}
      dev_VERSION: ${{ needs.dev.outputs.dev_version }}
      dev_TIME: ${{ needs.dev.outputs.dev_time }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@main

      - name: Download files from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp-sing-box/

      - name: Zip `sing-box` cores by `tar`
        run: |
          mkdir -p ./tmp-sing-box/compress/
          # `PuerNya` cores for macOS
          mv -f "./tmp-sing-box/sing-box-puernya-darwin-amd64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-darwin-amd64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

          mv -f "./tmp-sing-box/sing-box-puernya-darwin-arm64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-puernya-darwin-arm64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

          # `Release` cores for macOS
          mv -f "./tmp-sing-box/sing-box-release-darwin-amd64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-release-darwin-amd64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

          mv -f "./tmp-sing-box/sing-box-release-darwin-arm64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-release-darwin-arm64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

          # `dev` cores for macOS
          mv -f "./tmp-sing-box/sing-box-dev-darwin-amd64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-dev-darwin-amd64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

          mv -f "./tmp-sing-box/sing-box-dev-darwin-arm64/sing-box" ./tmp-sing-box/CrashCore
          chmod +x ./tmp-sing-box/CrashCore
          tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-dev-darwin-arm64.tar.gz" -C ./tmp-sing-box/ ./CrashCore

        # 删除 Linux 和 Windows 相关的压缩和移动步骤
        # 保留 macOS 相关的

      - name: Move `sing-box` cores
        run: |
          mkdir -p ./sing-box/
          mv -f ./tmp-sing-box/compress/*darwin* ./sing-box/
          rm -rf ./tmp*

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: |
            更新 [sing-box PuerNya 版](https://github.com/PuerNya/sing-box/tree/building)至 v${{ env.puernya_VERSION }}，发布于 ${{ env.puernya_TIME }} (macOS)
            更新 [sing-box Release 版](https://github.com/SagerNet/sing-box/tree/main)至 ${{ env.release_VERSION }}，发布于 ${{ env.release_TIME }} (macOS)
            更新 [sing-box Dev 版](https://github.com/SagerNet/sing-box/tree/dev)至 ${{ env.dev_VERSION }}，发布于 ${{ env.dev_TIME }} (macOS)
          file_glob: true
          file: ./sing-box/*darwin*
